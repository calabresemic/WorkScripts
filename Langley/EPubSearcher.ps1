#requires -version 5
<#
.SYNOPSIS
  Initial script for launching the SCAPer tool.
.DESCRIPTION
  Launches the script with the parameter SCAP when pressing the RUN SCAP button.
  Also launches the script to generate the json files and new scripts.
.INPUTS
  None
.OUTPUTS
  None
.NOTES
  Version:        1.0
  Author:         Michael Calabrese
  Creation Date:  1/25/2022
  Edit Date:      1/26/2022
  Purpose/Change: Initial script development
  ToDo List: 
    - Priority 1 is to use something other than win32_addremoveprogram when SCCM not installed.
	- Priority 2 is to clean up the handling of exchange server rights. Maybe a manual entry array.
	- Priority 3 is to get the UI looking nicer.
  #>

[System.Reflection.Assembly]::LoadWithPartialName("PresentationFramework") | Out-Null

#region functions generated by PowerShell Pro Tools
function Add-ControlVariables {
New-Variable -Name 'launchWindow' -Value $window.FindName('launchWindow') -Scope 1 -Force
New-Variable -Name 'searchButton' -Value $window.FindName('searchButton') -Scope 1 -Force
New-Variable -Name 'searchTextbox' -Value $window.FindName('searchTextbox') -Scope 1 -Force
New-Variable -Name 'closeButton' -Value $window.FindName('closeButton') -Scope 1 -Force
}

function Import-Xaml {
	[xml]$xaml=@'
<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    x:Name="launchWindow" Height="400" Width="300"
    AllowsTransparency="True" Background="Transparent"  
    WindowStyle="None" ResizeMode="NoResize" WindowStartupLocation="CenterScreen"
    MouseLeftButtonDown="launchWindow_MouseLeftButtonDown">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Border CornerRadius="10" Grid.RowSpan="2">
            <Border.Background>
                <LinearGradientBrush>
                    <GradientStop Color="DarkBlue" Offset="0.0"/>
                    <GradientStop Color="#1434A4" Offset="1"/>
                </LinearGradientBrush>
            </Border.Background>
        </Border>

        <Button x:Name="closeButton"
                VerticalAlignment="Top" 
                HorizontalAlignment="Right" 
                Content="X" 
                Background="Transparent" 
                Width="25"
                Height="25"
                Foreground="White"
                Click="closeButton_Click">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Background" Value="Transparent"/>

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" CornerRadius="5"
                                                                                    BorderThickness="1"
                                                                                    BorderBrush="White">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="White"/>
                            <Setter Property="Opacity" Value="0.4"/>
                            <Setter Property="Foreground" Value="DeepSkyBlue"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <!-- Top title panel -->
        <StackPanel VerticalAlignment="Center">
            <TextBlock Text='Let Me "E-Pub" That'
                       HorizontalAlignment="Center"
                       Foreground="White"
                       FontWeight="Bold"
                       FontSize="28"/>
            <TextBlock Text="E-Publishing Searcher"
                       HorizontalAlignment="Center"
                       Foreground="White"
                       FontWeight="Light"
                       FontSize="18"/>
        </StackPanel>
        
        <!-- Bottom panel that holds buttons -->
        <StackPanel Grid.Row="2">

            <TextBox x:Name="searchTextbox" 
                     Width="200" 
                     Height="25" 
                     FontWeight="Light" 
                     KeyDown="searchTextbox_KeyDown"
                     Foreground="White"
                     Background="Transparent"
                     BorderThickness="0"
                     Opacity="0.5">
                <TextBox.Style>
                    <Style TargetType="{x:Type TextBox}">
                        <Setter Property="Text" Value = "Document Name"/>
                            <Style.Triggers>
                                <Trigger Property="IsFocused" Value="true">
                                    <Setter Property="Text" Value=""/>
                                </Trigger>
                            </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
            
            <Border Width="200" Height="2" Background="White" Opacity="0.5"/>

            <!-- Large run scap button -->
            <Button x:Name="searchButton" Content="Search Document"
                    Width="150"
                    Height="40"
                    FontSize="18"
                    Margin="0,10,0,0"
                    Click="searchButton_Click">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Background" Value="Transparent"/>

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}" CornerRadius="20"
                                                                                      BorderThickness="2"
                                                                                      BorderBrush="White">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="White"/>
                                <Setter Property="Opacity" Value="0.4"/>
                                <Setter Property="Foreground" Value="DeepSkyBlue"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </StackPanel>

        <TextBlock Text="https://github.com/Calabresemic"
                   Foreground="White"
                   VerticalAlignment="Bottom"
                   HorizontalAlignment="Center"
                   FontWeight="Light"
                   FontSize="10"
                   Grid.Row="2"
                   Margin="0,0,0,10"/>
    </Grid>
</Window>
'@
	$manager = New-Object System.Xml.XmlNamespaceManager -ArgumentList $xaml.NameTable
	$manager.AddNamespace("x", "http://schemas.microsoft.com/winfx/2006/xaml");
	$xaml.SelectNodes("//*[@x:Name='launchWindow']", $manager)[0].RemoveAttribute('MouseLeftButtonDown')
	$xaml.SelectNodes("//*[@x:Name='searchButton']", $manager)[0].RemoveAttribute('Click')
	$xaml.SelectNodes("//*[@x:Name='closeButton']", $manager)[0].RemoveAttribute('Click')
	$xaml.SelectNodes("//*[@x:Name='searchTextbox']", $manager)[0].RemoveAttribute('KeyDown')
	$xamlReader = New-Object System.Xml.XmlNodeReader $xaml
	[Windows.Markup.XamlReader]::Load($xamlReader)
}

function Set-EventHandler {

	$launchWindow.add_MouseLeftButtonDown({
		param([System.Object]$sender,[System.Windows.Input.MouseButtonEventArgs]$e)
		launchWindow_MouseLeftButtonDown -sender $sender -e $e
	})

	$searchButton.add_Click({
		param([System.Object]$sender,[System.EventArgs]$e)
		searchButton_Click -sender $sender -e $e
	})

	$searchTextbox.add_KeyDown({
		param([System.Object]$sender,[System.EventArgs]$e)
		searchTextbox_KeyDown -sender $sender -e $e
	})

	$closeButton.add_Click({
		param([System.Object]$sender,[System.EventArgs]$e)
		closeButton_Click -sender $sender -e $e
	})
}

$window = Import-Xaml
Add-ControlVariables
Set-EventHandler
#endregion functions generated by PowerShell Pro Tools

function launchWindow_MouseLeftButtonDown
{
	#Just allows the form to respond to dragging.
	param($sender, $e)
	$sender.DragMove()
}

function searchButton_Click
{
	param($sender, $e)
	Search-EPub
}

function searchTextbox_KeyDown
{
	param($sender, $e)
	if($e.Key -eq 'Return'){
		Search-EPub
		$e.Handled = $true
	}
}

function closeButton_Click {
	param($sender, $e)
	$window.close()
}

function Search-EPub {
	Start-Process ('https://www.e-publishing.af.mil/Product-Index/#/?view=search&keyword={0}&isObsolete=false&modID=449&tabID=131' -f $searchTextbox.Text)
}

$window.ShowDialog()
